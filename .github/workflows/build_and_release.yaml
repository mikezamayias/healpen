name: Build and Release

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: self-hosted
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{secrets.github_token}}

  get_build_info:
    name: Get Build Info
    runs-on: self-hosted
    needs: cancel_previous_runs
    outputs:
      BUILD_DATE: ${{steps.get_build_metadata.outputs.current_date}}
      BUILD_NAME: ${{steps.get_build_metadata.outputs.build_name}}
      BUILD_VERSION: ${{steps.get_build_metadata.outputs.build_version}}
      BUILD_NUMBER: ${{steps.get_build_metadata.outputs.build_number}}
      BUILD_ATTEMPT: ${{steps.get_build_metadata.outputs.build_attempt}}
      MAJOR_VERSION: ${{steps.get_build_metadata.outputs.major_version}}
    steps:
      - id: get_build_metadata
        run: |
          major_version=1
          echo "major_version=$major_version" >> $GITHUB_OUTPUT
          current_date=$(date +%Y%m%d)
          echo "current_date=$current_date" >> $GITHUB_OUTPUT
          build_number=${{github.run_number}}
          printf "build_number=%s\n" $build_number >> $GITHUB_OUTPUT
          build_attempt=${{github.run_attempt}}
          printf "build_attempt=%s\n" $build_attempt >> $GITHUB_OUTPUT
          build_version=1.0.0
          printf "build_version=%s\n" $build_version >> $GITHUB_OUTPUT
          printf "build_name=%s-%s.%s\n" healpen $build_version $build_number >> $GITHUB_OUTPUT

  build:
    name: Build and Release
    runs-on: self-hosted
    needs: get_build_info
    env:
      BUILD_DATE: ${{needs.get_build_info.outputs.BUILD_DATE}}
      BUILD_NAME: ${{needs.get_build_info.outputs.BUILD_NAME}}
      BUILD_VERSION: ${{needs.get_build_info.outputs.BUILD_VERSION}}
      BUILD_NUMBER: ${{needs.get_build_info.outputs.BUILD_NUMBER}}
      BUILD_ATTEMPT: ${{needs.get_build_info.outputs.BUILD_ATTEMPT}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: ${{ secrets.ANDROID_KEY_ALIAS }}.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2.8.0
        id: flutter-action
        with:
          cache: true
          flutter-version: 3.16.0
          architecture: arm64
      - name: Update pubspec version
        run: |
          version=$(grep version pubspec.yaml | awk '{print $2}')
          new_version="${{env.BUILD_VERSION}}"
          if [[ "$OSTYPE" == "darwin"* ]]; then
            sed -i '' "s/^version:.*/version: $new_version+${{env.BUILD_NUMBER}}/" pubspec.yaml
          else
            sed -i "s/^version:.*/version: $new_version+${{env.BUILD_NUMBER}}/" pubspec.yaml
          fi
      - name: Build .env file
        run: |
          echo "OPEN_AI_API_KEY=${{secrets.OPEN_AI_API_KEY}}" >> .env
          echo "GOOGLE_APIS_KEY=${{secrets.GOOGLE_APIS_KEY}}" >> .env
          echo "HEALPEN_GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}" >> .env
      - name: Build generated files
        run: dart run build_runner build --delete-conflicting-outputs
      - name: Build AAB
        env:
          HEALPEN_SIGNING_STORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
          HEALPEN_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          HEALPEN_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          HEALPEN_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        run: flutter build appbundle --release
      - name: Rename AAB
        run: |
          cd "build/app/outputs/bundle/release"
          mv app-release.aab ${{env.BUILD_NAME}}.aab
      - name: Build IPA
        env:
          HEALPEN_SIGNING_STORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
          HEALPEN_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          HEALPEN_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          HEALPEN_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        run: flutter build ipa --release
      - name: Rename IPA
        run: |
          cd "build/ios/ipa"
          mv healpen.ipa ${{env.BUILD_NAME}}.ipa
      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/${{env.BUILD_NAME}}.aab,build/ios/ipa/${{env.BUILD_NAME}}.ipa"
          name: ${{env.BUILD_NAME}}
          tag: ${{env.BUILD_NAME}}
          body: ${{github.event.head_commit.message}}
          token: ${{secrets.github_token}}
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.BUILD_NAME}}.aab
          path: build/app/outputs/bundle/release/${{env.BUILD_NAME}}.aab
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.BUILD_NAME}}.ipa
          path: build/ios/ipa/${{env.BUILD_NAME}}.ipa

  firebase_app_distribution:
    name: Upload to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: [ get_build_info, build ]
    env:
      BUILD_DATE: ${{needs.get_build_info.outputs.BUILD_DATE}}
      BUILD_NAME: ${{needs.get_build_info.outputs.BUILD_NAME}}
      BUILD_VERSION: ${{needs.get_build_info.outputs.BUILD_VERSION}}
      BUILD_NUMBER: ${{needs.get_build_info.outputs.BUILD_NUMBER}}
      BUILD_ATTEMPT: ${{needs.get_build_info.outputs.BUILD_ATTEMPT}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Download AAB Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{env.BUILD_NAME}}.aab
      - name: Download IPA Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{env.BUILD_NAME}}.ipa
      - name: Distribution to Testers (Development, Android)
        if: github.ref == 'refs/heads/development'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          file: ${{env.BUILD_NAME}}.aab
          groups: testers
          releaseNotes: ${{github.event.head_commit.message}}
      - name: Distribution to Testers (Development, iOS)
        if: github.ref == 'refs/heads/development'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_IOS_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          file: ${{env.BUILD_NAME}}.ipa
          groups: testers
          releaseNotes: ${{github.event.head_commit.message}}
      - name: Distribution to Beta Testers (Production, Android)
        if: github.ref == 'refs/heads/production'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          file: ${{env.BUILD_NAME}}.aab
          groups: beta-testers
          releaseNotes: ${{github.event.head_commit.message}}
      - name: Distribution to Beta Testers (Production, iOS)
        if: github.ref == 'refs/heads/production'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_IOS_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          file: ${{env.BUILD_NAME}}.ipa
          groups: beta-testers
          releaseNotes: ${{github.event.head_commit.message}}

  play_store_distribution:
      name: Upload to Play Store
      runs-on: ubuntu-latest
      needs: [ get_build_info, build ]
      env:
        BUILD_DATE: ${{needs.get_build_info.outputs.BUILD_DATE}}
        BUILD_NAME: ${{needs.get_build_info.outputs.BUILD_NAME}}
        BUILD_VERSION: ${{needs.get_build_info.outputs.BUILD_VERSION}}
        BUILD_NUMBER: ${{needs.get_build_info.outputs.BUILD_NUMBER}}
        BUILD_ATTEMPT: ${{needs.get_build_info.outputs.BUILD_ATTEMPT}}
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
        - name: Setup Java
          uses: actions/setup-java@v3
          with:
            distribution: "zulu"
            java-version: "17"
        - name: Download AAB Artifact
          uses: actions/download-artifact@v3
          with:
            name: ${{env.BUILD_NAME}}.aab
        - name: Create service_account.json
          run: echo '${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}' > service_account.json
        - name: Deploy App to Play Store
          uses: r0adkll/upload-google-play@v1
          with:
            serviceAccountJson: service_account.json
            packageName: com.mikezamayias.healpen
            releaseFiles: ${{env.BUILD_NAME}}.aab
            track: beta